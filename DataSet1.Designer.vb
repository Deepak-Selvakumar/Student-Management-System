'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DataSet1"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DataSet1
    Inherits Global.System.Data.DataSet
    
    Private tableadmissiondetails As admissiondetailsDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("admissiondetails")) Is Nothing) Then
                MyBase.Tables.Add(New admissiondetailsDataTable(ds.Tables("admissiondetails")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property admissiondetails() As admissiondetailsDataTable
        Get
            Return Me.tableadmissiondetails
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DataSet1 = CType(MyBase.Clone,DataSet1)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("admissiondetails")) Is Nothing) Then
                MyBase.Tables.Add(New admissiondetailsDataTable(ds.Tables("admissiondetails")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableadmissiondetails = CType(MyBase.Tables("admissiondetails"),admissiondetailsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableadmissiondetails) Is Nothing) Then
                Me.tableadmissiondetails.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DataSet1"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DataSet1.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableadmissiondetails = New admissiondetailsDataTable()
        MyBase.Tables.Add(Me.tableadmissiondetails)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeadmissiondetails() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DataSet1 = New DataSet1()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub admissiondetailsRowChangeEventHandler(ByVal sender As Object, ByVal e As admissiondetailsRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class admissiondetailsDataTable
        Inherits Global.System.Data.TypedTableBase(Of admissiondetailsRow)
        
        Private columnstudent_id As Global.System.Data.DataColumn
        
        Private columnstudent_name As Global.System.Data.DataColumn
        
        Private columnadmission_number As Global.System.Data.DataColumn
        
        Private columnclass As Global.System.Data.DataColumn
        
        Private columndate_of_joining As Global.System.Data.DataColumn
        
        Private columndate_of_leaving As Global.System.Data.DataColumn
        
        Private columndayd As Global.System.Data.DataColumn
        
        Private columnstatus As Global.System.Data.DataColumn
        
        Private columnapplication_number As Global.System.Data.DataColumn
        
        Private columnregistration_number As Global.System.Data.DataColumn
        
        Private columnjoining_site As Global.System.Data.DataColumn
        
        Private columncurrent_site As Global.System.Data.DataColumn
        
        Private columnclass_sought As Global.System.Data.DataColumn
        
        Private columndate_of_birth As Global.System.Data.DataColumn
        
        Private columnaadhar_number As Global.System.Data.DataColumn
        
        Private columnplace_of_birth As Global.System.Data.DataColumn
        
        Private columncountry As Global.System.Data.DataColumn
        
        Private columngender As Global.System.Data.DataColumn
        
        Private columnblood_group As Global.System.Data.DataColumn
        
        Private columnmother_tongue As Global.System.Data.DataColumn
        
        Private columnexam_roll_no As Global.System.Data.DataColumn
        
        Private columnexam_reg_no As Global.System.Data.DataColumn
        
        Private columnreligion As Global.System.Data.DataColumn
        
        Private columncaste As Global.System.Data.DataColumn
        
        Private columnsub_caste As Global.System.Data.DataColumn
        
        Private columnfamily_id As Global.System.Data.DataColumn
        
        Private columnresidence_id As Global.System.Data.DataColumn
        
        Private columnstud_photo As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "admissiondetails"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property student_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstudent_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property student_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstudent_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property admission_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadmission_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property classColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property date_of_joiningColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_of_joining
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property date_of_leavingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_of_leaving
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property daydColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndayd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property application_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnapplication_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property registration_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnregistration_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property joining_siteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjoining_site
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property current_siteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncurrent_site
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property class_soughtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclass_sought
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property date_of_birthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_of_birth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property aadhar_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaadhar_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property place_of_birthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnplace_of_birth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property countryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncountry
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property genderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngender
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property blood_groupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnblood_group
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property mother_tongueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmother_tongue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property exam_roll_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnexam_roll_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property exam_reg_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnexam_reg_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property religionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreligion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property casteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncaste
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property sub_casteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsub_caste
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property family_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfamily_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property residence_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnresidence_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property stud_photoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstud_photo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As admissiondetailsRow
            Get
                Return CType(Me.Rows(index),admissiondetailsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event admissiondetailsRowChanging As admissiondetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event admissiondetailsRowChanged As admissiondetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event admissiondetailsRowDeleting As admissiondetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event admissiondetailsRowDeleted As admissiondetailsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddadmissiondetailsRow(ByVal row As admissiondetailsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddadmissiondetailsRow( _
                    ByVal student_id As Integer,  _
                    ByVal student_name As String,  _
                    ByVal admission_number As String,  _
                    ByVal _class As String,  _
                    ByVal date_of_joining As Date,  _
                    ByVal date_of_leaving As Date,  _
                    ByVal dayd As Integer,  _
                    ByVal status As String,  _
                    ByVal application_number As String,  _
                    ByVal registration_number As String,  _
                    ByVal joining_site As String,  _
                    ByVal current_site As String,  _
                    ByVal class_sought As String,  _
                    ByVal date_of_birth As Date,  _
                    ByVal aadhar_number As String,  _
                    ByVal place_of_birth As String,  _
                    ByVal country As String,  _
                    ByVal gender As String,  _
                    ByVal blood_group As String,  _
                    ByVal mother_tongue As String,  _
                    ByVal exam_roll_no As String,  _
                    ByVal exam_reg_no As String,  _
                    ByVal religion As String,  _
                    ByVal caste As String,  _
                    ByVal sub_caste As String,  _
                    ByVal family_id As String,  _
                    ByVal residence_id As String,  _
                    ByVal stud_photo() As Byte) As admissiondetailsRow
            Dim rowadmissiondetailsRow As admissiondetailsRow = CType(Me.NewRow,admissiondetailsRow)
            Dim columnValuesArray() As Object = New Object() {student_id, student_name, admission_number, _class, date_of_joining, date_of_leaving, dayd, status, application_number, registration_number, joining_site, current_site, class_sought, date_of_birth, aadhar_number, place_of_birth, country, gender, blood_group, mother_tongue, exam_roll_no, exam_reg_no, religion, caste, sub_caste, family_id, residence_id, stud_photo}
            rowadmissiondetailsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowadmissiondetailsRow)
            Return rowadmissiondetailsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindBystudent_id(ByVal student_id As Integer) As admissiondetailsRow
            Return CType(Me.Rows.Find(New Object() {student_id}),admissiondetailsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As admissiondetailsDataTable = CType(MyBase.Clone,admissiondetailsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New admissiondetailsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnstudent_id = MyBase.Columns("student_id")
            Me.columnstudent_name = MyBase.Columns("student_name")
            Me.columnadmission_number = MyBase.Columns("admission_number")
            Me.columnclass = MyBase.Columns("class")
            Me.columndate_of_joining = MyBase.Columns("date_of_joining")
            Me.columndate_of_leaving = MyBase.Columns("date_of_leaving")
            Me.columndayd = MyBase.Columns("dayd")
            Me.columnstatus = MyBase.Columns("status")
            Me.columnapplication_number = MyBase.Columns("application_number")
            Me.columnregistration_number = MyBase.Columns("registration_number")
            Me.columnjoining_site = MyBase.Columns("joining_site")
            Me.columncurrent_site = MyBase.Columns("current_site")
            Me.columnclass_sought = MyBase.Columns("class_sought")
            Me.columndate_of_birth = MyBase.Columns("date_of_birth")
            Me.columnaadhar_number = MyBase.Columns("aadhar_number")
            Me.columnplace_of_birth = MyBase.Columns("place_of_birth")
            Me.columncountry = MyBase.Columns("country")
            Me.columngender = MyBase.Columns("gender")
            Me.columnblood_group = MyBase.Columns("blood_group")
            Me.columnmother_tongue = MyBase.Columns("mother_tongue")
            Me.columnexam_roll_no = MyBase.Columns("exam_roll_no")
            Me.columnexam_reg_no = MyBase.Columns("exam_reg_no")
            Me.columnreligion = MyBase.Columns("religion")
            Me.columncaste = MyBase.Columns("caste")
            Me.columnsub_caste = MyBase.Columns("sub_caste")
            Me.columnfamily_id = MyBase.Columns("family_id")
            Me.columnresidence_id = MyBase.Columns("residence_id")
            Me.columnstud_photo = MyBase.Columns("stud_photo")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnstudent_id = New Global.System.Data.DataColumn("student_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstudent_id)
            Me.columnstudent_name = New Global.System.Data.DataColumn("student_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstudent_name)
            Me.columnadmission_number = New Global.System.Data.DataColumn("admission_number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadmission_number)
            Me.columnclass = New Global.System.Data.DataColumn("class", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnclass.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "classColumn")
            Me.columnclass.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnclass")
            Me.columnclass.ExtendedProperties.Add("Generator_UserColumnName", "class")
            MyBase.Columns.Add(Me.columnclass)
            Me.columndate_of_joining = New Global.System.Data.DataColumn("date_of_joining", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_of_joining)
            Me.columndate_of_leaving = New Global.System.Data.DataColumn("date_of_leaving", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_of_leaving)
            Me.columndayd = New Global.System.Data.DataColumn("dayd", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndayd)
            Me.columnstatus = New Global.System.Data.DataColumn("status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstatus)
            Me.columnapplication_number = New Global.System.Data.DataColumn("application_number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnapplication_number)
            Me.columnregistration_number = New Global.System.Data.DataColumn("registration_number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnregistration_number)
            Me.columnjoining_site = New Global.System.Data.DataColumn("joining_site", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjoining_site)
            Me.columncurrent_site = New Global.System.Data.DataColumn("current_site", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncurrent_site)
            Me.columnclass_sought = New Global.System.Data.DataColumn("class_sought", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclass_sought)
            Me.columndate_of_birth = New Global.System.Data.DataColumn("date_of_birth", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_of_birth)
            Me.columnaadhar_number = New Global.System.Data.DataColumn("aadhar_number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaadhar_number)
            Me.columnplace_of_birth = New Global.System.Data.DataColumn("place_of_birth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnplace_of_birth)
            Me.columncountry = New Global.System.Data.DataColumn("country", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncountry)
            Me.columngender = New Global.System.Data.DataColumn("gender", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngender)
            Me.columnblood_group = New Global.System.Data.DataColumn("blood_group", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnblood_group)
            Me.columnmother_tongue = New Global.System.Data.DataColumn("mother_tongue", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmother_tongue)
            Me.columnexam_roll_no = New Global.System.Data.DataColumn("exam_roll_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexam_roll_no)
            Me.columnexam_reg_no = New Global.System.Data.DataColumn("exam_reg_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexam_reg_no)
            Me.columnreligion = New Global.System.Data.DataColumn("religion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreligion)
            Me.columncaste = New Global.System.Data.DataColumn("caste", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncaste)
            Me.columnsub_caste = New Global.System.Data.DataColumn("sub_caste", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsub_caste)
            Me.columnfamily_id = New Global.System.Data.DataColumn("family_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfamily_id)
            Me.columnresidence_id = New Global.System.Data.DataColumn("residence_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnresidence_id)
            Me.columnstud_photo = New Global.System.Data.DataColumn("stud_photo", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstud_photo)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnstudent_id}, true))
            Me.columnstudent_id.AllowDBNull = false
            Me.columnstudent_id.Unique = true
            Me.columnstudent_name.MaxLength = 20
            Me.columnadmission_number.MaxLength = 20
            Me.columnclass.MaxLength = 10
            Me.columnstatus.MaxLength = 5
            Me.columnapplication_number.MaxLength = 20
            Me.columnregistration_number.MaxLength = 20
            Me.columnjoining_site.MaxLength = 20
            Me.columncurrent_site.MaxLength = 20
            Me.columnclass_sought.MaxLength = 10
            Me.columnaadhar_number.MaxLength = 20
            Me.columnplace_of_birth.MaxLength = 50
            Me.columncountry.MaxLength = 50
            Me.columngender.MaxLength = 10
            Me.columnblood_group.MaxLength = 5
            Me.columnmother_tongue.MaxLength = 20
            Me.columnexam_roll_no.MaxLength = 20
            Me.columnexam_reg_no.MaxLength = 20
            Me.columnreligion.MaxLength = 20
            Me.columncaste.MaxLength = 20
            Me.columnsub_caste.MaxLength = 20
            Me.columnfamily_id.MaxLength = 20
            Me.columnresidence_id.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewadmissiondetailsRow() As admissiondetailsRow
            Return CType(Me.NewRow,admissiondetailsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New admissiondetailsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(admissiondetailsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.admissiondetailsRowChangedEvent) Is Nothing) Then
                RaiseEvent admissiondetailsRowChanged(Me, New admissiondetailsRowChangeEvent(CType(e.Row,admissiondetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.admissiondetailsRowChangingEvent) Is Nothing) Then
                RaiseEvent admissiondetailsRowChanging(Me, New admissiondetailsRowChangeEvent(CType(e.Row,admissiondetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.admissiondetailsRowDeletedEvent) Is Nothing) Then
                RaiseEvent admissiondetailsRowDeleted(Me, New admissiondetailsRowChangeEvent(CType(e.Row,admissiondetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.admissiondetailsRowDeletingEvent) Is Nothing) Then
                RaiseEvent admissiondetailsRowDeleting(Me, New admissiondetailsRowChangeEvent(CType(e.Row,admissiondetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveadmissiondetailsRow(ByVal row As admissiondetailsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "admissiondetailsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class admissiondetailsRow
        Inherits Global.System.Data.DataRow
        
        Private tableadmissiondetails As admissiondetailsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableadmissiondetails = CType(Me.Table,admissiondetailsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property student_id() As Integer
            Get
                Return CType(Me(Me.tableadmissiondetails.student_idColumn),Integer)
            End Get
            Set
                Me(Me.tableadmissiondetails.student_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property student_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableadmissiondetails.student_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'student_name' in table 'admissiondetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadmissiondetails.student_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property admission_number() As String
            Get
                Try 
                    Return CType(Me(Me.tableadmissiondetails.admission_numberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'admission_number' in table 'admissiondetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadmissiondetails.admission_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property _class() As String
            Get
                Try 
                    Return CType(Me(Me.tableadmissiondetails.classColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'class' in table 'admissiondetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadmissiondetails.classColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property date_of_joining() As Date
            Get
                Try 
                    Return CType(Me(Me.tableadmissiondetails.date_of_joiningColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_of_joining' in table 'admissiondetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadmissiondetails.date_of_joiningColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property date_of_leaving() As Date
            Get
                Try 
                    Return CType(Me(Me.tableadmissiondetails.date_of_leavingColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_of_leaving' in table 'admissiondetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadmissiondetails.date_of_leavingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property dayd() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableadmissiondetails.daydColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dayd' in table 'admissiondetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadmissiondetails.daydColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property status() As String
            Get
                Try 
                    Return CType(Me(Me.tableadmissiondetails.statusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'status' in table 'admissiondetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadmissiondetails.statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property application_number() As String
            Get
                Try 
                    Return CType(Me(Me.tableadmissiondetails.application_numberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'application_number' in table 'admissiondetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadmissiondetails.application_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property registration_number() As String
            Get
                Try 
                    Return CType(Me(Me.tableadmissiondetails.registration_numberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'registration_number' in table 'admissiondetails' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableadmissiondetails.registration_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property joining_site() As String
            Get
                Try 
                    Return CType(Me(Me.tableadmissiondetails.joining_siteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'joining_site' in table 'admissiondetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadmissiondetails.joining_siteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property current_site() As String
            Get
                Try 
                    Return CType(Me(Me.tableadmissiondetails.current_siteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'current_site' in table 'admissiondetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadmissiondetails.current_siteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property class_sought() As String
            Get
                Try 
                    Return CType(Me(Me.tableadmissiondetails.class_soughtColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'class_sought' in table 'admissiondetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadmissiondetails.class_soughtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property date_of_birth() As Date
            Get
                Try 
                    Return CType(Me(Me.tableadmissiondetails.date_of_birthColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_of_birth' in table 'admissiondetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadmissiondetails.date_of_birthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property aadhar_number() As String
            Get
                Try 
                    Return CType(Me(Me.tableadmissiondetails.aadhar_numberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'aadhar_number' in table 'admissiondetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadmissiondetails.aadhar_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property place_of_birth() As String
            Get
                Try 
                    Return CType(Me(Me.tableadmissiondetails.place_of_birthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'place_of_birth' in table 'admissiondetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadmissiondetails.place_of_birthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property country() As String
            Get
                Try 
                    Return CType(Me(Me.tableadmissiondetails.countryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'country' in table 'admissiondetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadmissiondetails.countryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property gender() As String
            Get
                Try 
                    Return CType(Me(Me.tableadmissiondetails.genderColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'gender' in table 'admissiondetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadmissiondetails.genderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property blood_group() As String
            Get
                Try 
                    Return CType(Me(Me.tableadmissiondetails.blood_groupColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'blood_group' in table 'admissiondetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadmissiondetails.blood_groupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property mother_tongue() As String
            Get
                Try 
                    Return CType(Me(Me.tableadmissiondetails.mother_tongueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mother_tongue' in table 'admissiondetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadmissiondetails.mother_tongueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property exam_roll_no() As String
            Get
                Try 
                    Return CType(Me(Me.tableadmissiondetails.exam_roll_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'exam_roll_no' in table 'admissiondetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadmissiondetails.exam_roll_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property exam_reg_no() As String
            Get
                Try 
                    Return CType(Me(Me.tableadmissiondetails.exam_reg_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'exam_reg_no' in table 'admissiondetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadmissiondetails.exam_reg_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property religion() As String
            Get
                Try 
                    Return CType(Me(Me.tableadmissiondetails.religionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'religion' in table 'admissiondetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadmissiondetails.religionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property caste() As String
            Get
                Try 
                    Return CType(Me(Me.tableadmissiondetails.casteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'caste' in table 'admissiondetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadmissiondetails.casteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property sub_caste() As String
            Get
                Try 
                    Return CType(Me(Me.tableadmissiondetails.sub_casteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sub_caste' in table 'admissiondetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadmissiondetails.sub_casteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property family_id() As String
            Get
                Try 
                    Return CType(Me(Me.tableadmissiondetails.family_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'family_id' in table 'admissiondetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadmissiondetails.family_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property residence_id() As String
            Get
                Try 
                    Return CType(Me(Me.tableadmissiondetails.residence_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'residence_id' in table 'admissiondetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadmissiondetails.residence_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property stud_photo() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableadmissiondetails.stud_photoColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'stud_photo' in table 'admissiondetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadmissiondetails.stud_photoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isstudent_nameNull() As Boolean
            Return Me.IsNull(Me.tableadmissiondetails.student_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setstudent_nameNull()
            Me(Me.tableadmissiondetails.student_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isadmission_numberNull() As Boolean
            Return Me.IsNull(Me.tableadmissiondetails.admission_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setadmission_numberNull()
            Me(Me.tableadmissiondetails.admission_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Is_classNull() As Boolean
            Return Me.IsNull(Me.tableadmissiondetails.classColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Set_classNull()
            Me(Me.tableadmissiondetails.classColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isdate_of_joiningNull() As Boolean
            Return Me.IsNull(Me.tableadmissiondetails.date_of_joiningColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setdate_of_joiningNull()
            Me(Me.tableadmissiondetails.date_of_joiningColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isdate_of_leavingNull() As Boolean
            Return Me.IsNull(Me.tableadmissiondetails.date_of_leavingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setdate_of_leavingNull()
            Me(Me.tableadmissiondetails.date_of_leavingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsdaydNull() As Boolean
            Return Me.IsNull(Me.tableadmissiondetails.daydColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetdaydNull()
            Me(Me.tableadmissiondetails.daydColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsstatusNull() As Boolean
            Return Me.IsNull(Me.tableadmissiondetails.statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetstatusNull()
            Me(Me.tableadmissiondetails.statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isapplication_numberNull() As Boolean
            Return Me.IsNull(Me.tableadmissiondetails.application_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setapplication_numberNull()
            Me(Me.tableadmissiondetails.application_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isregistration_numberNull() As Boolean
            Return Me.IsNull(Me.tableadmissiondetails.registration_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setregistration_numberNull()
            Me(Me.tableadmissiondetails.registration_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isjoining_siteNull() As Boolean
            Return Me.IsNull(Me.tableadmissiondetails.joining_siteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setjoining_siteNull()
            Me(Me.tableadmissiondetails.joining_siteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Iscurrent_siteNull() As Boolean
            Return Me.IsNull(Me.tableadmissiondetails.current_siteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setcurrent_siteNull()
            Me(Me.tableadmissiondetails.current_siteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isclass_soughtNull() As Boolean
            Return Me.IsNull(Me.tableadmissiondetails.class_soughtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setclass_soughtNull()
            Me(Me.tableadmissiondetails.class_soughtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isdate_of_birthNull() As Boolean
            Return Me.IsNull(Me.tableadmissiondetails.date_of_birthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setdate_of_birthNull()
            Me(Me.tableadmissiondetails.date_of_birthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isaadhar_numberNull() As Boolean
            Return Me.IsNull(Me.tableadmissiondetails.aadhar_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setaadhar_numberNull()
            Me(Me.tableadmissiondetails.aadhar_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isplace_of_birthNull() As Boolean
            Return Me.IsNull(Me.tableadmissiondetails.place_of_birthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setplace_of_birthNull()
            Me(Me.tableadmissiondetails.place_of_birthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IscountryNull() As Boolean
            Return Me.IsNull(Me.tableadmissiondetails.countryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetcountryNull()
            Me(Me.tableadmissiondetails.countryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsgenderNull() As Boolean
            Return Me.IsNull(Me.tableadmissiondetails.genderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetgenderNull()
            Me(Me.tableadmissiondetails.genderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isblood_groupNull() As Boolean
            Return Me.IsNull(Me.tableadmissiondetails.blood_groupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setblood_groupNull()
            Me(Me.tableadmissiondetails.blood_groupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Ismother_tongueNull() As Boolean
            Return Me.IsNull(Me.tableadmissiondetails.mother_tongueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setmother_tongueNull()
            Me(Me.tableadmissiondetails.mother_tongueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isexam_roll_noNull() As Boolean
            Return Me.IsNull(Me.tableadmissiondetails.exam_roll_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setexam_roll_noNull()
            Me(Me.tableadmissiondetails.exam_roll_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isexam_reg_noNull() As Boolean
            Return Me.IsNull(Me.tableadmissiondetails.exam_reg_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setexam_reg_noNull()
            Me(Me.tableadmissiondetails.exam_reg_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsreligionNull() As Boolean
            Return Me.IsNull(Me.tableadmissiondetails.religionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetreligionNull()
            Me(Me.tableadmissiondetails.religionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IscasteNull() As Boolean
            Return Me.IsNull(Me.tableadmissiondetails.casteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetcasteNull()
            Me(Me.tableadmissiondetails.casteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Issub_casteNull() As Boolean
            Return Me.IsNull(Me.tableadmissiondetails.sub_casteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setsub_casteNull()
            Me(Me.tableadmissiondetails.sub_casteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isfamily_idNull() As Boolean
            Return Me.IsNull(Me.tableadmissiondetails.family_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setfamily_idNull()
            Me(Me.tableadmissiondetails.family_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isresidence_idNull() As Boolean
            Return Me.IsNull(Me.tableadmissiondetails.residence_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setresidence_idNull()
            Me(Me.tableadmissiondetails.residence_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isstud_photoNull() As Boolean
            Return Me.IsNull(Me.tableadmissiondetails.stud_photoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setstud_photoNull()
            Me(Me.tableadmissiondetails.stud_photoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class admissiondetailsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As admissiondetailsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As admissiondetailsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As admissiondetailsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DataSet1TableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class admissiondetailsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.Microsoft.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.Microsoft.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.Microsoft.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.Microsoft.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.Microsoft.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.Microsoft.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.Microsoft.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.Microsoft.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.Microsoft.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.Microsoft.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "admissiondetails"
            tableMapping.ColumnMappings.Add("student_id", "student_id")
            tableMapping.ColumnMappings.Add("student_name", "student_name")
            tableMapping.ColumnMappings.Add("admission_number", "admission_number")
            tableMapping.ColumnMappings.Add("class", "class")
            tableMapping.ColumnMappings.Add("date_of_joining", "date_of_joining")
            tableMapping.ColumnMappings.Add("date_of_leaving", "date_of_leaving")
            tableMapping.ColumnMappings.Add("dayd", "dayd")
            tableMapping.ColumnMappings.Add("status", "status")
            tableMapping.ColumnMappings.Add("application_number", "application_number")
            tableMapping.ColumnMappings.Add("registration_number", "registration_number")
            tableMapping.ColumnMappings.Add("joining_site", "joining_site")
            tableMapping.ColumnMappings.Add("current_site", "current_site")
            tableMapping.ColumnMappings.Add("class_sought", "class_sought")
            tableMapping.ColumnMappings.Add("date_of_birth", "date_of_birth")
            tableMapping.ColumnMappings.Add("aadhar_number", "aadhar_number")
            tableMapping.ColumnMappings.Add("place_of_birth", "place_of_birth")
            tableMapping.ColumnMappings.Add("country", "country")
            tableMapping.ColumnMappings.Add("gender", "gender")
            tableMapping.ColumnMappings.Add("blood_group", "blood_group")
            tableMapping.ColumnMappings.Add("mother_tongue", "mother_tongue")
            tableMapping.ColumnMappings.Add("exam_roll_no", "exam_roll_no")
            tableMapping.ColumnMappings.Add("exam_reg_no", "exam_reg_no")
            tableMapping.ColumnMappings.Add("religion", "religion")
            tableMapping.ColumnMappings.Add("caste", "caste")
            tableMapping.ColumnMappings.Add("sub_caste", "sub_caste")
            tableMapping.ColumnMappings.Add("family_id", "family_id")
            tableMapping.ColumnMappings.Add("residence_id", "residence_id")
            tableMapping.ColumnMappings.Add("stud_photo", "stud_photo")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.Microsoft.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [admissiondetails] WHERE (([student_id] = @Original_student_id))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.Microsoft.Data.SqlClient.SqlParameter = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_student_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "student_id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.Microsoft.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [admissiondetails] ([student_id], [student_name], [admission_number],"& _ 
                " [class], [date_of_joining], [date_of_leaving], [dayd], [status], [application_n"& _ 
                "umber], [registration_number], [joining_site], [current_site], [class_sought], ["& _ 
                "date_of_birth], [aadhar_number], [place_of_birth], [country], [gender], [blood_g"& _ 
                "roup], [mother_tongue], [exam_roll_no], [exam_reg_no], [religion], [caste], [sub"& _ 
                "_caste], [family_id], [residence_id], [stud_photo]) VALUES (@student_id, @studen"& _ 
                "t_name, @admission_number, @class, @date_of_joining, @date_of_leaving, @dayd, @s"& _ 
                "tatus, @application_number, @registration_number, @joining_site, @current_site, "& _ 
                "@class_sought, @date_of_birth, @aadhar_number, @place_of_birth, @country, @gende"& _ 
                "r, @blood_group, @mother_tongue, @exam_roll_no, @exam_reg_no, @religion, @caste,"& _ 
                " @sub_caste, @family_id, @residence_id, @stud_photo)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@student_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "student_id"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@student_name"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "student_name"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@admission_number"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "admission_number"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@class"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "class"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@date_of_joining"
            param.DbType = Global.System.Data.DbType.[Date]
            param.SqlDbType = Global.System.Data.SqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "date_of_joining"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@date_of_leaving"
            param.DbType = Global.System.Data.DbType.[Date]
            param.SqlDbType = Global.System.Data.SqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "date_of_leaving"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@dayd"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "dayd"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@status"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "status"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@application_number"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "application_number"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@registration_number"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "registration_number"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@joining_site"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "joining_site"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@current_site"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "current_site"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@class_sought"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "class_sought"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@date_of_birth"
            param.DbType = Global.System.Data.DbType.[Date]
            param.SqlDbType = Global.System.Data.SqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "date_of_birth"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@aadhar_number"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "aadhar_number"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@place_of_birth"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "place_of_birth"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@country"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "country"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@gender"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "gender"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@blood_group"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "blood_group"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@mother_tongue"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "mother_tongue"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@exam_roll_no"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "exam_roll_no"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@exam_reg_no"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "exam_reg_no"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@religion"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "religion"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@caste"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "caste"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@sub_caste"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "sub_caste"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@family_id"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "family_id"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@residence_id"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "residence_id"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@stud_photo"
            param.DbType = Global.System.Data.DbType.Binary
            param.SqlDbType = Global.System.Data.SqlDbType.VarBinary
            param.IsNullable = true
            param.SourceColumn = "stud_photo"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.Microsoft.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [admissiondetails] SET [student_id] = @student_id, [student_name] = @stude"& _ 
                "nt_name, [admission_number] = @admission_number, [class] = @class, [date_of_join"& _ 
                "ing] = @date_of_joining, [date_of_leaving] = @date_of_leaving, [dayd] = @dayd, ["& _ 
                "status] = @status, [application_number] = @application_number, [registration_num"& _ 
                "ber] = @registration_number, [joining_site] = @joining_site, [current_site] = @c"& _ 
                "urrent_site, [class_sought] = @class_sought, [date_of_birth] = @date_of_birth, ["& _ 
                "aadhar_number] = @aadhar_number, [place_of_birth] = @place_of_birth, [country] ="& _ 
                " @country, [gender] = @gender, [blood_group] = @blood_group, [mother_tongue] = @"& _ 
                "mother_tongue, [exam_roll_no] = @exam_roll_no, [exam_reg_no] = @exam_reg_no, [re"& _ 
                "ligion] = @religion, [caste] = @caste, [sub_caste] = @sub_caste, [family_id] = @"& _ 
                "family_id, [residence_id] = @residence_id, [stud_photo] = @stud_photo WHERE (([s"& _ 
                "tudent_id] = @Original_student_id))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@student_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "student_id"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@student_name"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "student_name"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@admission_number"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "admission_number"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@class"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "class"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@date_of_joining"
            param.DbType = Global.System.Data.DbType.[Date]
            param.SqlDbType = Global.System.Data.SqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "date_of_joining"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@date_of_leaving"
            param.DbType = Global.System.Data.DbType.[Date]
            param.SqlDbType = Global.System.Data.SqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "date_of_leaving"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@dayd"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "dayd"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@status"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "status"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@application_number"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "application_number"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@registration_number"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "registration_number"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@joining_site"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "joining_site"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@current_site"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "current_site"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@class_sought"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "class_sought"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@date_of_birth"
            param.DbType = Global.System.Data.DbType.[Date]
            param.SqlDbType = Global.System.Data.SqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "date_of_birth"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@aadhar_number"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "aadhar_number"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@place_of_birth"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "place_of_birth"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@country"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "country"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@gender"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "gender"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@blood_group"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "blood_group"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@mother_tongue"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "mother_tongue"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@exam_roll_no"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "exam_roll_no"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@exam_reg_no"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "exam_reg_no"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@religion"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "religion"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@caste"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "caste"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@sub_caste"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "sub_caste"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@family_id"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "family_id"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@residence_id"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "residence_id"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@stud_photo"
            param.DbType = Global.System.Data.DbType.Binary
            param.SqlDbType = Global.System.Data.SqlDbType.VarBinary
            param.IsNullable = true
            param.SourceColumn = "stud_photo"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_student_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "student_id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.Microsoft.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("admissionformConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.Microsoft.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.Microsoft.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select * from admissiondetails"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet1.admissiondetailsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSet1.admissiondetailsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.admissiondetailsDataTable = New DataSet1.admissiondetailsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSet1.admissiondetailsDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "admissiondetails")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _admissiondetailsTableAdapter As admissiondetailsTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property admissiondetailsTableAdapter() As admissiondetailsTableAdapter
            Get
                Return Me._admissiondetailsTableAdapter
            End Get
            Set
                Me._admissiondetailsTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._admissiondetailsTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._admissiondetailsTableAdapter.Connection) Is Nothing)) Then
                    Return Me._admissiondetailsTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._admissiondetailsTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DataSet1, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._admissiondetailsTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.admissiondetails.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._admissiondetailsTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DataSet1, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._admissiondetailsTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.admissiondetails.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._admissiondetailsTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DataSet1, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._admissiondetailsTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.admissiondetails.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._admissiondetailsTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DataSet1) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._admissiondetailsTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._admissiondetailsTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._admissiondetailsTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._admissiondetailsTableAdapter, Me._admissiondetailsTableAdapter.Connection)
                    Me._admissiondetailsTableAdapter.Connection = CType(workConnection,Global.Microsoft.Data.SqlClient.SqlConnection)
                    Me._admissiondetailsTableAdapter.Transaction = CType(workTransaction,Global.Microsoft.Data.SqlClient.SqlTransaction)
                    If Me._admissiondetailsTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._admissiondetailsTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._admissiondetailsTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._admissiondetailsTableAdapter) Is Nothing) Then
                    Me._admissiondetailsTableAdapter.Connection = CType(revertConnections(Me._admissiondetailsTableAdapter),Global.Microsoft.Data.SqlClient.SqlConnection)
                    Me._admissiondetailsTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
